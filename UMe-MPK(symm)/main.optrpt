Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C++ Intel(R) 64 Compiler Classic for applications running on Intel(R) 64, Version 2021.5.0 Build 20211109_000000

Compiler options: -I -std=c++11 -qopenmp -O3 -qopt-report=3 -xHOST -Wl,-rpath -L . -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -L. -lDC -o main

    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main(int, char **)) [1] main.cpp(16,1)
  -> INLINE (MANUAL): (16,1) std::basic_ofstream<char, std::char_traits<char>>::~basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *const)
    -> INLINE (MANUAL): /usr/include/c++/4.8.5/fstream:(673,7) std::basic_ofstream<char, std::char_traits<char>>::~basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *, const long *const *)
      -> INLINE (MANUAL): (674,7) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *const)
        -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(276,7) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *)
          -> EXTERN: (276,22) std::ios_base::~ios_base(std::ios_base *const)
      -> INLINE (MANUAL): (674,7) std::basic_ostream<char, std::char_traits<char>>::~basic_ostream(std::basic_ostream<char, std::char_traits<char>> *, const long *const *)
        -> INLINE (MANUAL): /usr/include/c++/4.8.5/ostream:(93,26) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *const)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(276,7) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *)
            -> EXTERN: (276,22) std::ios_base::~ios_base(std::ios_base *const)
      -> INLINE (MANUAL): (674,9) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *const)
        -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(276,7) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *)
          -> EXTERN: (276,22) std::ios_base::~ios_base(std::ios_base *const)
      -> INLINE (MANUAL): (674,9) std::basic_ostream<char, std::char_traits<char>>::~basic_ostream(std::basic_ostream<char, std::char_traits<char>> *, const long *const *)
        -> INLINE (MANUAL): /usr/include/c++/4.8.5/ostream:(93,26) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *const)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(276,7) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *)
            -> EXTERN: (276,22) std::ios_base::~ios_base(std::ios_base *const)
      -> INLINE (MANUAL): (674,9) std::basic_filebuf<char, std::char_traits<char>>::~basic_filebuf(std::basic_filebuf<char, std::char_traits<char>> *)
        -> EXTERN: (220,7) std::__basic_file<char>::~__basic_file(std::__basic_file<char> *)
        -> INLINE (MANUAL): (220,7) std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf(std::basic_streambuf<char, std::char_traits<char>> *const)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/streambuf:(197,7) std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf(std::basic_streambuf<char, std::char_traits<char>> *)
            -> EXTERN: (198,9) std::locale::~locale(std::locale *)
        -> EXTERN: (220,15) std::basic_filebuf<char, std::char_traits<char>>::close(std::basic_filebuf<char, std::char_traits<char>> *)
        -> EXTERN: (220,24) std::__basic_file<char>::~__basic_file(std::__basic_file<char> *)
        -> INLINE (MANUAL): (220,24) std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf(std::basic_streambuf<char, std::char_traits<char>> *const)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/streambuf:(197,7) std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf(std::basic_streambuf<char, std::char_traits<char>> *)
            -> EXTERN: (198,9) std::locale::~locale(std::locale *)
  -> EXTERN: (23,19) omp_get_max_threads()
  -> INLINE (MANUAL): (31,13) atoi(const char *)
    -> EXTERN: /usr/include/stdlib.h:(280,16) strtol(const char *, char **, int)
  -> (35,5) read_mtx(char *, int *, int *, int *, int **, int **, double **)
  -> EXTERN: (43,5) printf(const char *, ...)
  -> (44,10) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE (MANUAL): (47,14) std::basic_ofstream<char, std::char_traits<char>>::~basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *const)
    -> INLINE (MANUAL): /usr/include/c++/4.8.5/fstream:(673,7) std::basic_ofstream<char, std::char_traits<char>>::~basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *, const long *const *)
      -> INLINE (MANUAL): (674,7) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *const)
        -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(276,7) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *)
          -> EXTERN: (276,22) std::ios_base::~ios_base(std::ios_base *const)
      -> INLINE (MANUAL): (674,7) std::basic_ostream<char, std::char_traits<char>>::~basic_ostream(std::basic_ostream<char, std::char_traits<char>> *, const long *const *)
        -> INLINE (MANUAL): /usr/include/c++/4.8.5/ostream:(93,26) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *const)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(276,7) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *)
            -> EXTERN: (276,22) std::ios_base::~ios_base(std::ios_base *const)
      -> INLINE (MANUAL): (674,9) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *const)
        -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(276,7) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *)
          -> EXTERN: (276,22) std::ios_base::~ios_base(std::ios_base *const)
      -> INLINE (MANUAL): (674,9) std::basic_ostream<char, std::char_traits<char>>::~basic_ostream(std::basic_ostream<char, std::char_traits<char>> *, const long *const *)
        -> INLINE (MANUAL): /usr/include/c++/4.8.5/ostream:(93,26) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *const)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(276,7) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *)
            -> EXTERN: (276,22) std::ios_base::~ios_base(std::ios_base *const)
      -> INLINE (MANUAL): (674,9) std::basic_filebuf<char, std::char_traits<char>>::~basic_filebuf(std::basic_filebuf<char, std::char_traits<char>> *)
        -> EXTERN: (220,7) std::__basic_file<char>::~__basic_file(std::__basic_file<char> *)
        -> INLINE (MANUAL): (220,7) std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf(std::basic_streambuf<char, std::char_traits<char>> *const)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/streambuf:(197,7) std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf(std::basic_streambuf<char, std::char_traits<char>> *)
            -> EXTERN: (198,9) std::locale::~locale(std::locale *)
        -> EXTERN: (220,15) std::basic_filebuf<char, std::char_traits<char>>::close(std::basic_filebuf<char, std::char_traits<char>> *)
        -> EXTERN: (220,24) std::__basic_file<char>::~__basic_file(std::__basic_file<char> *)
        -> INLINE (MANUAL): (220,24) std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf(std::basic_streambuf<char, std::char_traits<char>> *const)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/streambuf:(197,7) std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf(std::basic_streambuf<char, std::char_traits<char>> *)
            -> EXTERN: (198,9) std::locale::~locale(std::locale *)
  -> INLINE (MANUAL): (47,14) std::basic_ofstream<char, std::char_traits<char>>::basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *const)
    -> INLINE (MANUAL): /usr/include/c++/4.8.5/fstream:(625,7) std::basic_ofstream<char, std::char_traits<char>>::basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *, const long *const *)
      -> INLINE (MANUAL): (625,7) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *const)
        -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(276,7) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *)
          -> EXTERN: (276,22) std::ios_base::~ios_base(std::ios_base *const)
      -> INLINE (MANUAL): (625,7) std::basic_filebuf<char, std::char_traits<char>>::~basic_filebuf(std::basic_filebuf<char, std::char_traits<char>> *)
        -> EXTERN: (220,7) std::__basic_file<char>::~__basic_file(std::__basic_file<char> *)
        -> INLINE (MANUAL): (220,7) std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf(std::basic_streambuf<char, std::char_traits<char>> *const)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/streambuf:(197,7) std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf(std::basic_streambuf<char, std::char_traits<char>> *)
            -> EXTERN: (198,9) std::locale::~locale(std::locale *)
        -> EXTERN: (220,15) std::basic_filebuf<char, std::char_traits<char>>::close(std::basic_filebuf<char, std::char_traits<char>> *)
        -> EXTERN: (220,24) std::__basic_file<char>::~__basic_file(std::__basic_file<char> *)
        -> INLINE (MANUAL): (220,24) std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf(std::basic_streambuf<char, std::char_traits<char>> *const)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/streambuf:(197,7) std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf(std::basic_streambuf<char, std::char_traits<char>> *)
            -> EXTERN: (198,9) std::locale::~locale(std::locale *)
      -> INLINE (MANUAL): (625,7) std::basic_ostream<char, std::char_traits<char>>::~basic_ostream(std::basic_ostream<char, std::char_traits<char>> *, const long *const *)
        -> INLINE (MANUAL): /usr/include/c++/4.8.5/ostream:(93,26) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *const)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(276,7) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *)
            -> EXTERN: (276,22) std::ios_base::~ios_base(std::ios_base *const)
      -> EXTERN: (625,7) std::basic_filebuf<char, std::char_traits<char>>::basic_filebuf(std::basic_filebuf<char, std::char_traits<char>> *)
      -> INLINE (MANUAL): (625,7) std::basic_ostream<char, std::char_traits<char>>::basic_ostream(std::basic_ostream<char, std::char_traits<char>> *, const long *const *)
        -> INLINE (MANUAL): /usr/include/c++/4.8.5/ostream:(384,7) std::basic_ios<char, std::char_traits<char>>::basic_ios(std::basic_ios<char, std::char_traits<char>> *const)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(454,7) std::basic_ios<char, std::char_traits<char>>::basic_ios(std::basic_ios<char, std::char_traits<char>> *)
            -> EXTERN: (454,7) std::ios_base::ios_base(std::ios_base *const)
        -> INLINE (MANUAL): /usr/include/c++/4.8.5/ostream:(384,7) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *const)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(276,7) std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *)
            -> EXTERN: (276,22) std::ios_base::~ios_base(std::ios_base *const)
        -> EXTERN: /usr/include/c++/4.8.5/ostream:(385,15) std::basic_ios<char, std::char_traits<char>>::init(std::basic_ios<char, std::char_traits<char>> *, std::basic_streambuf<char, std::char_traits<char>> *)
      -> INLINE (MANUAL): (625,7) std::basic_ios<char, std::char_traits<char>>::basic_ios(std::basic_ios<char, std::char_traits<char>> *const)
        -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(454,7) std::basic_ios<char, std::char_traits<char>>::basic_ios(std::basic_ios<char, std::char_traits<char>> *)
          -> EXTERN: (454,7) std::ios_base::ios_base(std::ios_base *const)
      -> EXTERN: (626,15) std::basic_ios<char, std::char_traits<char>>::init(std::basic_ios<char, std::char_traits<char>> *, std::basic_streambuf<char, std::char_traits<char>> *)
  -> INLINE (MANUAL): (48,24) std::basic_ofstream<char, std::char_traits<char>>::open(std::basic_ofstream<char, std::char_traits<char>> *, const char *, std::ios_base::openmode)
    -> EXTERN: /usr/include/c++/4.8.5/fstream:(716,18) std::basic_filebuf<char, std::char_traits<char>>::open(std::basic_filebuf<char, std::char_traits<char>> *, const char *, std::ios_base::openmode)
    -> INLINE (MANUAL): /usr/include/c++/4.8.5/fstream:(716,35) std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
    -> INLINE (MANUAL): /usr/include/c++/4.8.5/fstream:(717,10) std::basic_ios<char, std::char_traits<char>>::setstate(std::basic_ios<char, std::char_traits<char>> *, std::ios_base::iostate)
      -> EXTERN: /usr/include/c++/4.8.5/bits/basic_ios.h:(152,15) std::basic_ios<char, std::char_traits<char>>::clear(std::basic_ios<char, std::char_traits<char>> *, std::ios_base::iostate)
      -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(152,27) std::basic_ios<char, std::char_traits<char>>::rdstate(const std::basic_ios<char, std::char_traits<char>> *) const
      -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(152,37) std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)
    -> EXTERN: /usr/include/c++/4.8.5/fstream:(721,10) std::basic_ios<char, std::char_traits<char>>::clear(std::basic_ios<char, std::char_traits<char>> *, std::ios_base::iostate)
  -> (49,24) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (49,39) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> EXTERN: (49,46) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, int)
  -> (49,51) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> EXTERN: (49,58) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, int)
  -> (49,66) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> EXTERN: (52,36) operator new[](std::size_t)
  -> EXTERN: (53,36) operator new[](std::size_t)
  -> EXTERN: (54,40) operator new[](std::size_t)
  -> EXTERN: (55,40) operator new[](std::size_t)
  -> EXTERN: (58,28) rand()
  -> (63,5) Base_MPK(int, int, int *, int *, double *, double *, double *&, int, double *, double *, double *)
  -> EXTERN: (64,5) printf(const char *, ...)
  -> (65,10) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (66,24) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (66,39) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (97,13) DC_MPK(int, int, int *, int *, double *, double *, double *&, int, double *, double *, double *, int, int)
  -> INLINE: (98,13) CheckCorrectness(int, double *, double *)
    -> INLINE (MANUAL): common.h:(33,44) std::max<double>(const double &, const double &)
    -> common.h:(46,14) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> common.h:(46,37) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> common.h:(51,14) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> EXTERN: common.h:(51,50) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, int)
    -> common.h:(51,65) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> common.h:(51,73) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> EXTERN: (99,13) printf(const char *, ...)
  -> EXTERN: (111,5) printf(const char *, ...)
  -> (112,10) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> EXTERN: (114,24) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, int)
  -> (114,41) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> EXTERN: (114,49) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, int)
  -> (114,67) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (114,75) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (114,96) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (114,103) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (114,122) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE (MANUAL): (117,24) std::basic_ofstream<char, std::char_traits<char>>::close(std::basic_ofstream<char, std::char_traits<char>> *)
    -> EXTERN: /usr/include/c++/4.8.5/fstream:(755,18) std::basic_filebuf<char, std::char_traits<char>>::close(std::basic_filebuf<char, std::char_traits<char>> *)
    -> INLINE (MANUAL): /usr/include/c++/4.8.5/fstream:(756,10) std::basic_ios<char, std::char_traits<char>>::setstate(std::basic_ios<char, std::char_traits<char>> *, std::ios_base::iostate)
      -> EXTERN: /usr/include/c++/4.8.5/bits/basic_ios.h:(152,15) std::basic_ios<char, std::char_traits<char>>::clear(std::basic_ios<char, std::char_traits<char>> *, std::ios_base::iostate)
      -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(152,27) std::basic_ios<char, std::char_traits<char>>::rdstate(const std::basic_ios<char, std::char_traits<char>> *) const
      -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/basic_ios.h:(152,37) std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)
  -> EXTERN: (118,5) puts(const char *)
  -> EXTERN: (120,5) operator delete[](void *)
  -> EXTERN: (121,5) operator delete[](void *)
  -> EXTERN: (122,5) operator delete[](void *)
  -> EXTERN: (124,5) operator delete[](void *)
  -> EXTERN: (125,5) operator delete[](void *)
  -> EXTERN: (126,5) operator delete[](void *)
  -> EXTERN: (127,5) operator delete[](void *)


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at main.cpp(56,5)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED
OpenMP Construct at main.cpp(92,13)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at main.cpp(89,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at common.h(31,5) inlined into main.cpp(98,13)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 42 
      remark #15477: vector cost: 8.000 
      remark #15478: estimated potential speedup: 4.730 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at common.h(31,5) inlined into main.cpp(98,13)
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 42 
      remark #15477: vector cost: 8.000 
      remark #15478: estimated potential speedup: 4.730 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at common.h(31,5) inlined into main.cpp(98,13)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 42 
      remark #15477: vector cost: 8.000 
      remark #15478: estimated potential speedup: 4.730 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at main.cpp(56,5)
   remark #15527: loop was not vectorized: function call to rand() cannot be vectorized   [ main.cpp(58,28) ]
LOOP END

LOOP BEGIN at main.cpp(92,13)
   remark #25399: memcopy generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at main.cpp(92,13)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 5 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.110 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at main.cpp(92,13)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at main.cpp(88,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ main.cpp(97,13) ]
LOOP END

    Report from: Code generation optimizations [cg]

main.cpp(92,13):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
main.cpp(92,13):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
main.cpp(92,13):remark #34026: call to memcpy implemented as a call to optimized library version
main.cpp(16,1):remark #34051: REGISTER ALLOCATION : [main] main.cpp:16

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   52[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm29 k0-k7]
        
    Routine temporaries
        Total         :     775
            Global    :     159
            Local     :     616
        Regenerable   :     252
        Spilled       :       8
        
    Routine stack
        Variables     :     700 bytes*
            Reads     :      58 [1.54e+00 ~ 1.5%]
            Writes    :      76 [1.29e+00 ~ 1.3%]
        Spills        :     104 bytes*
            Reads     :      27 [5.19e-01 ~ 0.5%]
            Writes    :      26 [1.16e+00 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: DC_MPK(int, int, int *, int *, double *, double *, double *&, int, double *, double *, double *, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (DC_MPK(int, int, int *, int *, double *, double *, double *&, int, double *, double *, double *, int, int)) [2] DC_MPK.h(92,1)
  -> EXTERN: (94,20) omp_get_wtime()
  -> (98,10) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (98,41) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> EXTERN: (99,9) operator delete(void *)
  -> EXTERN: (99,9) operator new(std::size_t)
  -> INLINE (MANUAL): (99,38) DC::DC(DC *, int, int, int)
    -> EXTERN: DC.h:(61,4) operator new(std::size_t)
    -> EXTERN: DC.h:(61,4) memset(void *, int, size_t)
    -> EXTERN: DC.h:(62,23) operator new[](std::size_t)
    -> EXTERN: DC.h:(63,22) operator new[](std::size_t)
  -> EXTERN: (100,13) DC::DC_creation(DC *, int *, int *, int)
  -> (101,10) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (101,46) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> EXTERN: (103,27) DC::DC_get_RowRev(DC *)
  -> EXTERN: (104,28) DC::DC_get_RowPerm(DC *)
  -> EXTERN: (107,36) operator new[](std::size_t)
  -> EXTERN: (108,32) operator new[](std::size_t)
  -> EXTERN: (109,43) operator new[](std::size_t)
  -> EXTERN: (110,40) operator new[](std::size_t)
  -> (111,5) reorder_matrix(int, int *, int *, double *, int *, int *, double *, int *, int *)
  -> INLINE: (112,5) reorder_vector(int, double *&, double *&, int *)
  -> EXTERN: (114,40) memset(void *, int, size_t)
  -> EXTERN: (114,40) operator new[](std::size_t)
  -> EXTERN: (119,18) omp_get_wtime()
  -> INLINE: (128,9) reorder_vector(int, double *&, double *&, int *)
  -> EXTERN: (130,17) omp_get_wtime()
  -> EXTERN: (131,17) DC::DC_traversal(DC *, void (*)(char **, DCArgs *), void (*)(char **, DCArgs *), char **, char **, int)
  -> EXTERN: (132,15) omp_get_wtime()
  -> EXTERN: (153,5) operator delete[](void *)
  -> EXTERN: (154,5) operator delete[](void *)
  -> EXTERN: (155,5) operator delete[](void *)
  -> EXTERN: (156,5) operator delete[](void *)
  -> EXTERN: (157,5) operator delete[](void *)


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at common.h(100,5) inlined into DC_MPK.h(113,5)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED
OpenMP Construct at common.h(100,5) inlined into DC_MPK.h(129,9)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED
OpenMP Construct at DC_MPK.h(143,9)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED
OpenMP Construct at DC_MPK.h(147,9)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at DC_MPK.h(125,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between m (128:9) and m (100:5)
LOOP END

LOOP BEGIN at common.h(100,5) inlined into DC_MPK.h(113,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 5.000 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at common.h(100,5) inlined into DC_MPK.h(113,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 5.000 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at common.h(100,5) inlined into DC_MPK.h(113,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 5.000 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at common.h(100,5) inlined into DC_MPK.h(129,9)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 5.000 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at common.h(100,5) inlined into DC_MPK.h(129,9)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 5.000 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at common.h(100,5) inlined into DC_MPK.h(129,9)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 5.000 
   remark #15478: estimated potential speedup: 1.570 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at DC_MPK.h(147,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *y[i] (149:13) and new_x (149:13)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at DC_MPK.h(147,9)
<Remainder>
LOOP END

LOOP BEGIN at DC_MPK.h(143,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *y[i] (145:13) and y_ref (145:13)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at DC_MPK.h(143,9)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

DC.h(61,4):remark #34014: optimization advice for memset: increase the destination's alignment to 32 (and use __assume_aligned) to increase the width of stores
DC.h(61,4):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
DC_MPK.h(114,40):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
DC_MPK.h(114,40):remark #34026: call to memset implemented as a call to optimized library version
DC_MPK.h(92,1):remark #34051: REGISTER ALLOCATION : [_Z6DC_MPKiiPiS_PdS0_RS0_iS0_S0_S0_ii] DC_MPK.h:92

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     593
            Global    :     168
            Local     :     425
        Regenerable   :     206
        Spilled       :      15
        
    Routine stack
        Variables     :     264 bytes*
            Reads     :      29 [5.65e-01 ~ 0.6%]
            Writes    :      42 [7.33e+00 ~ 7.3%]
        Spills        :     160 bytes*
            Reads     :      44 [1.13e+00 ~ 1.1%]
            Writes    :      40 [3.20e+00 ~ 3.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: reorder_matrix(int, int *, int *, double *, int *, int *, double *, int *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (reorder_matrix(int, int *, int *, double *, int *, int *, double *, int *, int *)) [3] common.h(65,1)
  -> INLINE (MANUAL): (82,64) std::pair<int, double>::pair(std::pair<int, double> *)
  -> EXTERN: (82,64) operator new[](std::size_t)
  -> INLINE (MANUAL): (89,9) std::sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
    -> /usr/include/c++/4.8.5/bits/stl_algo.h:(5460,4) std::__introsort_loop<std::pair<int, double> *, long>(std::pair<int, double> *, std::pair<int, double> *, long)
    -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algo.h:(5461,5) std::__lg(long)
      -> EXTERN: /usr/include/c++/4.8.5/bits/stl_algobase.h:(989,46) __builtin_clzl(unsigned long)
    -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algo.h:(5462,4) std::__final_insertion_sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
      -> INLINE (MANUAL): (2211,4) std::__insertion_sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
        -> INLINE (MANUAL): (2137,13) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
        -> INLINE (MANUAL): (2141,8) std::copy_backward<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algobase.h:(629,15) std::__copy_move_backward_a2<false, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::pair<int, double> *>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::pair<int, double> *)
            -> INLINE (MANUAL): (594,19) std::__copy_move_backward_a<false, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type)
              -> INLINE (MANUAL): (584,14) std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b<std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type)
            -> INLINE (MANUAL): (595,6) std::__niter_base<std::_Iter_base<std::pair<int, double> *, false>::iterator_type>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type)
              -> INLINE (MANUAL): (278,14) std::_Iter_base<std::pair<int, double> *, false>::_S_base(std::pair<int, double> *)
            -> INLINE (MANUAL): (595,34) std::__niter_base<std::_Iter_base<std::pair<int, double> *, false>::iterator_type>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type)
              -> INLINE (MANUAL): (278,14) std::_Iter_base<std::pair<int, double> *, false>::_S_base(std::pair<int, double> *)
            -> INLINE (MANUAL): (596,6) std::__niter_base<std::_Iter_base<std::pair<int, double> *, false>::iterator_type>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type)
              -> INLINE (MANUAL): (278,14) std::_Iter_base<std::pair<int, double> *, false>::_S_base(std::pair<int, double> *)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algobase.h:(630,9) std::__miter_base<std::pair<int, double> *>(std::pair<int, double> *)
            -> INLINE (MANUAL): (289,14) std::_Iter_base<std::pair<int, double> *, false>::_S_base(std::pair<int, double> *)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algobase.h:(630,37) std::__miter_base<std::pair<int, double> *>(std::pair<int, double> *)
            -> INLINE (MANUAL): (289,14) std::_Iter_base<std::pair<int, double> *, false>::_S_base(std::pair<int, double> *)
        -> INLINE (MANUAL): (2145,6) std::__unguarded_linear_insert<std::pair<int, double> *>(std::pair<int, double> *)
          -> INLINE (MANUAL): (2098,20) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
          -> INLINE (MANUAL): (2098,20) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
      -> INLINE (MANUAL): (2212,4) std::__unguarded_insertion_sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
        -> INLINE (MANUAL): (2181,2) std::__unguarded_linear_insert<std::pair<int, double> *>(std::pair<int, double> *)
          -> INLINE (MANUAL): (2098,20) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
          -> INLINE (MANUAL): (2098,20) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
      -> INLINE (MANUAL): (2215,2) std::__insertion_sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
        -> INLINE (MANUAL): (2137,13) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
        -> INLINE (MANUAL): (2141,8) std::copy_backward<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algobase.h:(629,15) std::__copy_move_backward_a2<false, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::pair<int, double> *>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::pair<int, double> *)
            -> INLINE (MANUAL): (594,19) std::__copy_move_backward_a<false, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type)
              -> INLINE (MANUAL): (584,14) std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b<std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type)
            -> INLINE (MANUAL): (595,6) std::__niter_base<std::_Iter_base<std::pair<int, double> *, false>::iterator_type>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type)
              -> INLINE (MANUAL): (278,14) std::_Iter_base<std::pair<int, double> *, false>::_S_base(std::pair<int, double> *)
            -> INLINE (MANUAL): (595,34) std::__niter_base<std::_Iter_base<std::pair<int, double> *, false>::iterator_type>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type)
              -> INLINE (MANUAL): (278,14) std::_Iter_base<std::pair<int, double> *, false>::_S_base(std::pair<int, double> *)
            -> INLINE (MANUAL): (596,6) std::__niter_base<std::_Iter_base<std::pair<int, double> *, false>::iterator_type>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type)
              -> INLINE (MANUAL): (278,14) std::_Iter_base<std::pair<int, double> *, false>::_S_base(std::pair<int, double> *)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algobase.h:(630,9) std::__miter_base<std::pair<int, double> *>(std::pair<int, double> *)
            -> INLINE (MANUAL): (289,14) std::_Iter_base<std::pair<int, double> *, false>::_S_base(std::pair<int, double> *)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algobase.h:(630,37) std::__miter_base<std::pair<int, double> *>(std::pair<int, double> *)
            -> INLINE (MANUAL): (289,14) std::_Iter_base<std::pair<int, double> *, false>::_S_base(std::pair<int, double> *)
        -> INLINE (MANUAL): (2145,6) std::__unguarded_linear_insert<std::pair<int, double> *>(std::pair<int, double> *)
          -> INLINE (MANUAL): (2098,20) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
          -> INLINE (MANUAL): (2098,20) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
  -> EXTERN: (95,9) operator delete[](void *)


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at common.h(75,1)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at common.h(67,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between ordering[i] (69:19) and new_rowPtr[i] (70:9)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at common.h(67,5)
<Remainder>
LOOP END

LOOP BEGIN at common.h(76,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at common.h(82,64)
   <Distributed chunk1>
      remark #25426: Loop Distributed (2 way) 
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 4.250 
      remark #15478: estimated potential speedup: 0.470 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at common.h(82,64)
   <Remainder, Distributed chunk1>
   LOOP END

   LOOP BEGIN at common.h(82,64)
   <Distributed chunk2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.000 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at common.h(82,64)
   <Remainder, Distributed chunk2>
   LOOP END

   LOOP BEGIN at common.h(83,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between U17_V->first[k-row_start] (85:13) and csrColIdx[k] (85:13)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at common.h(83,9)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2135,7) inlined into common.h(90,9)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(536,4) inlined into common.h(90,9)
         remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.8.5/bits/stl_algobase.h(537,9) ]
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(536,4) inlined into common.h(90,9)
      <Remainder>
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2098,7) inlined into common.h(90,9)
         remark #15523: loop was not vectorized: loop control variable __next was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2180,7) inlined into common.h(90,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between __val (2095:10) and __val (2104:17)

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2098,7) inlined into common.h(90,9)
         remark #15523: loop was not vectorized: loop control variable __next was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2135,7) inlined into common.h(90,9)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(536,4) inlined into common.h(90,9)
         remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.8.5/bits/stl_algobase.h(537,9) ]
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(536,4) inlined into common.h(90,9)
      <Remainder>
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2098,7) inlined into common.h(90,9)
         remark #15523: loop was not vectorized: loop control variable __next was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at common.h(90,9)
   <Peeled loop for vectorization, Multiversioned v1>
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25015: Estimate of max trip count of loop=7
   LOOP END

   LOOP BEGIN at common.h(90,9)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15451: unmasked unaligned unit stride stores: 2 
      remark #15452: unmasked strided loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 9 
      remark #15477: vector cost: 4.870 
      remark #15478: estimated potential speedup: 1.800 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at common.h(90,9)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at common.h(90,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at common.h(90,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algo.h(2140,11):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(537,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(537,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(537,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algo.h(2142,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algo.h(2095,10):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_algo.h(2100,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algo.h(2104,17):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algo.h(2095,10):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_algo.h(2100,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algo.h(2104,17):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algo.h(2140,11):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(537,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(537,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(537,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algo.h(2142,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algo.h(2095,10):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_algo.h(2100,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algo.h(2104,17):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
common.h(65,1):remark #34051: REGISTER ALLOCATION : [_Z14reorder_matrixiPiS_PdS_S_S0_S_S_] common.h:65

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm6 k1-k2]
        
    Routine temporaries
        Total         :     380
            Global    :     147
            Local     :     233
        Regenerable   :      70
        Spilled       :      18
        
    Routine stack
        Variables     :     156 bytes*
            Reads     :      15 [1.18e+00 ~ 1.2%]
            Writes    :      16 [1.51e+00 ~ 1.5%]
        Spills        :     184 bytes*
            Reads     :      36 [2.39e+00 ~ 2.4%]
            Writes    :      30 [1.54e+00 ~ 1.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__introsort_loop<std::pair<int, double> *, long>(std::pair<int, double> *, std::pair<int, double> *, long)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (std::__introsort_loop<std::pair<int, double> *, long>(std::pair<int, double> *, std::pair<int, double> *, long)) [4] /usr/include/c++/4.8.5/bits/stl_algo.h(2305,5)
  -> INLINE (MANUAL): (2310,8) std::partial_sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
    -> INLINE (MANUAL): (5308,7) std::__heap_select<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
      -> INLINE (MANUAL): (1933,7) std::make_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
        -> /usr/include/c++/4.8.5/bits/stl_heap.h:(407,4) std::__adjust_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
      -> INLINE (MANUAL): (1935,11) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
      -> INLINE (MANUAL): (1936,4) std::__pop_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
        -> /usr/include/c++/4.8.5/bits/stl_heap.h:(263,7) std::__adjust_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
    -> INLINE (MANUAL): (5309,7) std::sort_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
      -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_heap.h:(478,4) std::__pop_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
        -> INLINE (MANUAL): (263,7) std::__adjust_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
          -> INLINE (MANUAL): (235,35) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
          -> INLINE (MANUAL): (247,7) std::__push_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
            -> INLINE (MANUAL): (135,64) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
  -> INLINE (MANUAL): (2315,6) std::__unguarded_partition_pivot<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
    -> (2282,7) std::__move_median_to_first<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
    -> INLINE (MANUAL): (2283,14) std::__unguarded_partition<std::pair<int, double> *, std::pair<int, double>>(std::pair<int, double> *, std::pair<int, double> *, const std::pair<int, double> &)
      -> INLINE (MANUAL): (2242,20) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
      -> INLINE (MANUAL): (2242,20) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
      -> INLINE (MANUAL): (2245,19) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
      -> INLINE (MANUAL): (2245,19) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
      -> INLINE (MANUAL): (2249,4) std::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
        -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algobase.h:(142,7) std::__iter_swap<true>::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
          -> INLINE (MANUAL): (102,11) std::swap<std::pair<int, double>>(std::pair<int, double> &, std::pair<int, double> &)
  -> INLINE (MANUAL): (2316,4) std::__introsort_loop<std::pair<int, double> *, long>(std::pair<int, double> *, std::pair<int, double> *, long)
    -> INLINE (MANUAL): (2310,8) std::partial_sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
      -> INLINE (MANUAL): (5308,7) std::__heap_select<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
        -> INLINE (MANUAL): (1933,7) std::make_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
          -> /usr/include/c++/4.8.5/bits/stl_heap.h:(407,4) std::__adjust_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
        -> INLINE (MANUAL): (1935,11) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
        -> INLINE (MANUAL): (1936,4) std::__pop_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
          -> /usr/include/c++/4.8.5/bits/stl_heap.h:(263,7) std::__adjust_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
      -> INLINE (MANUAL): (5309,7) std::sort_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
        -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_heap.h:(478,4) std::__pop_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
          -> INLINE (MANUAL): (263,7) std::__adjust_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
            -> INLINE (MANUAL): (235,35) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
            -> INLINE (MANUAL): (247,7) std::__push_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
              -> INLINE (MANUAL): (135,64) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
    -> INLINE (MANUAL): (2315,6) std::__unguarded_partition_pivot<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
      -> (2282,7) std::__move_median_to_first<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
      -> INLINE (MANUAL): (2283,14) std::__unguarded_partition<std::pair<int, double> *, std::pair<int, double>>(std::pair<int, double> *, std::pair<int, double> *, const std::pair<int, double> &)
        -> INLINE (MANUAL): (2242,20) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
        -> INLINE (MANUAL): (2242,20) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
        -> INLINE (MANUAL): (2245,19) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
        -> INLINE (MANUAL): (2245,19) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
        -> INLINE (MANUAL): (2249,4) std::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algobase.h:(142,7) std::__iter_swap<true>::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
            -> INLINE (MANUAL): (102,11) std::swap<std::pair<int, double>>(std::pair<int, double> &, std::pair<int, double> &)
    -> INLINE (MANUAL): (2316,4) std::__introsort_loop<std::pair<int, double> *, long>(std::pair<int, double> *, std::pair<int, double> *, long)
      -> INLINE (MANUAL): (2310,8) std::partial_sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
        -> INLINE (MANUAL): (5308,7) std::__heap_select<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
          -> INLINE (MANUAL): (1933,7) std::make_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
            -> /usr/include/c++/4.8.5/bits/stl_heap.h:(407,4) std::__adjust_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
          -> INLINE (MANUAL): (1935,11) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
          -> INLINE (MANUAL): (1936,4) std::__pop_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
            -> /usr/include/c++/4.8.5/bits/stl_heap.h:(263,7) std::__adjust_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
        -> INLINE (MANUAL): (5309,7) std::sort_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
          -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_heap.h:(478,4) std::__pop_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
            -> INLINE (MANUAL): (263,7) std::__adjust_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
              -> INLINE (MANUAL): (235,35) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
              -> INLINE (MANUAL): (247,7) std::__push_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
                -> INLINE (MANUAL): (135,64) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
      -> INLINE (MANUAL): (2315,6) std::__unguarded_partition_pivot<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
        -> (2282,7) std::__move_median_to_first<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
        -> INLINE (MANUAL): (2283,14) std::__unguarded_partition<std::pair<int, double> *, std::pair<int, double>>(std::pair<int, double> *, std::pair<int, double> *, const std::pair<int, double> &)
          -> INLINE (MANUAL): (2242,20) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
          -> INLINE (MANUAL): (2242,20) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
          -> INLINE (MANUAL): (2245,19) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
          -> INLINE (MANUAL): (2245,19) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
          -> INLINE (MANUAL): (2249,4) std::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
            -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algobase.h:(142,7) std::__iter_swap<true>::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
              -> INLINE (MANUAL): (102,11) std::swap<std::pair<int, double>>(std::pair<int, double> &, std::pair<int, double> &)
      -> INLINE (MANUAL): (2316,4) std::__introsort_loop<std::pair<int, double> *, long>(std::pair<int, double> *, std::pair<int, double> *, long)
        -> INLINE (MANUAL): (2310,8) std::partial_sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
          -> INLINE (MANUAL): (5308,7) std::__heap_select<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
            -> INLINE (MANUAL): (1933,7) std::make_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
              -> /usr/include/c++/4.8.5/bits/stl_heap.h:(407,4) std::__adjust_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
            -> INLINE (MANUAL): (1935,11) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
            -> INLINE (MANUAL): (1936,4) std::__pop_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
              -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_heap.h:(263,7) std::__adjust_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
                -> INLINE (MANUAL): (235,35) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
                -> INLINE (MANUAL): (247,7) std::__push_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
                  -> INLINE (MANUAL): (135,64) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
          -> INLINE (MANUAL): (5309,7) std::sort_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
            -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_heap.h:(478,4) std::__pop_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
              -> INLINE (MANUAL): (263,7) std::__adjust_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
                -> INLINE (MANUAL): (235,35) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
                -> INLINE (MANUAL): (247,7) std::__push_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
                  -> INLINE (MANUAL): (135,64) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
        -> INLINE (MANUAL): (2315,6) std::__unguarded_partition_pivot<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
          -> (2282,7) std::__move_median_to_first<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)
          -> INLINE (MANUAL): (2283,14) std::__unguarded_partition<std::pair<int, double> *, std::pair<int, double>>(std::pair<int, double> *, std::pair<int, double> *, const std::pair<int, double> &)
            -> INLINE (MANUAL): (2242,20) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
            -> INLINE (MANUAL): (2242,20) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
            -> INLINE (MANUAL): (2245,19) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
            -> INLINE (MANUAL): (2245,19) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
            -> INLINE (MANUAL): (2249,4) std::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
              -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algobase.h:(142,7) std::__iter_swap<true>::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
                -> INLINE (MANUAL): (102,11) std::swap<std::pair<int, double>>(std::pair<int, double> &, std::pair<int, double> &)
        -> (2316,4) std::__introsort_loop<std::pair<int, double> *, long>(std::pair<int, double> *, std::pair<int, double> *, long)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2283,14) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2316,6)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2242,4) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2316,6)
      remark #15523: loop was not vectorized: loop control variable __first was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2245,4) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2316,6)
      remark #15523: loop was not vectorized: loop control variable __last was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2283,14) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2242,4) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
      remark #15523: loop was not vectorized: loop control variable __first was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2245,4) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
      remark #15523: loop was not vectorized: loop control variable __last was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2283,14) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2242,4) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
      remark #15523: loop was not vectorized: loop control variable __first was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2245,4) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
      remark #15523: loop was not vectorized: loop control variable __last was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2283,14) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2242,4) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
      remark #15523: loop was not vectorized: loop control variable __first was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2245,4) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
      remark #15523: loop was not vectorized: loop control variable __last was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(403,46) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(475,7) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(232,7) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(135,7) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(403,46) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(475,7) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(232,7) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(135,7) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(403,46) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(475,7) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(232,7) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(135,7) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(403,46) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2311,8)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(475,7) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2311,8)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(232,7) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2311,8)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(135,7) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2311,8)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2306,7)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2306,7) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2306,7) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification

         LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algo.h(2306,7) inlined into /usr/include/c++/4.8.5/bits/stl_algo.h(2317,4)
            remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/move.h(175,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/move.h(176,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(177,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(175,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/move.h(176,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(177,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(175,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/move.h(176,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(177,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(175,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/move.h(176,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(177,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(261,28):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(262,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(237,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(243,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(137,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(141,34):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(261,28):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(262,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(237,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(243,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(137,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(141,34):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(261,28):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(262,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(237,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(243,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(137,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(141,34):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(261,28):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(262,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(237,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(243,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(137,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(141,34):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algo.h(2305,5):remark #34051: REGISTER ALLOCATION : [_ZSt16__introsort_loopIPSt4pairIidElEvT_S3_T0_] /usr/include/c++/4.8.5/bits/stl_algo.h:2305

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   17[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     387
            Global    :     138
            Local     :     249
        Regenerable   :       8
        Spilled       :      15
        
    Routine stack
        Variables     :      64 bytes*
            Reads     :      12 [4.21e-01 ~ 0.4%]
            Writes    :       4 [1.50e-01 ~ 0.2%]
        Spills        :      80 bytes*
            Reads     :      24 [1.71e-01 ~ 0.2%]
            Writes    :      15 [1.61e-01 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__move_median_to_first<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (std::__move_median_to_first<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)) [5] /usr/include/c++/4.8.5/bits/stl_algo.h(80,5)
  -> INLINE (MANUAL): (85,16) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
  -> INLINE (MANUAL): (87,13) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
  -> INLINE (MANUAL): (88,6) std::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
    -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algobase.h:(142,7) std::__iter_swap<true>::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
      -> INLINE (MANUAL): (102,11) std::swap<std::pair<int, double>>(std::pair<int, double> &, std::pair<int, double> &)
  -> INLINE (MANUAL): (89,18) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
  -> INLINE (MANUAL): (90,6) std::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
    -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algobase.h:(142,7) std::__iter_swap<true>::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
      -> INLINE (MANUAL): (102,11) std::swap<std::pair<int, double>>(std::pair<int, double> &, std::pair<int, double> &)
  -> INLINE (MANUAL): (92,6) std::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
    -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algobase.h:(142,7) std::__iter_swap<true>::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
      -> INLINE (MANUAL): (102,11) std::swap<std::pair<int, double>>(std::pair<int, double> &, std::pair<int, double> &)
  -> INLINE (MANUAL): (94,21) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
  -> INLINE (MANUAL): (95,8) std::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
    -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algobase.h:(142,7) std::__iter_swap<true>::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
      -> INLINE (MANUAL): (102,11) std::swap<std::pair<int, double>>(std::pair<int, double> &, std::pair<int, double> &)
  -> INLINE (MANUAL): (96,21) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
  -> INLINE (MANUAL): (97,2) std::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
    -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algobase.h:(142,7) std::__iter_swap<true>::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
      -> INLINE (MANUAL): (102,11) std::swap<std::pair<int, double>>(std::pair<int, double> &, std::pair<int, double> &)
  -> INLINE (MANUAL): (99,2) std::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
    -> INLINE (MANUAL): /usr/include/c++/4.8.5/bits/stl_algobase.h:(142,7) std::__iter_swap<true>::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)
      -> INLINE (MANUAL): (102,11) std::swap<std::pair<int, double>>(std::pair<int, double> &, std::pair<int, double> &)


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/move.h(175,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/move.h(176,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(177,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(175,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/move.h(176,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(177,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(175,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/move.h(176,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(177,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(175,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/move.h(176,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(177,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(175,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/move.h(176,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(177,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(175,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/move.h(176,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/move.h(177,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algo.h(80,5):remark #34051: REGISTER ALLOCATION : [_ZSt22__move_median_to_firstIPSt4pairIidEEvT_S3_S3_S3_] /usr/include/c++/4.8.5/bits/stl_algo.h:80

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8-r10 zmm0-zmm1]
        
    Routine temporaries
        Total         :      39
            Global    :      18
            Local     :      21
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__adjust_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (std::__adjust_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)) [6] /usr/include/c++/4.8.5/bits/stl_heap.h(229,5)
  -> INLINE (MANUAL): (235,35) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)
  -> INLINE (MANUAL): (247,7) std::__push_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)
    -> INLINE (MANUAL): (135,64) std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(232,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_heap.h(135,7) inlined into /usr/include/c++/4.8.5/bits/stl_heap.h(248,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_heap.h(237,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(243,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(137,31):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(141,34):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_heap.h(229,5):remark #34051: REGISTER ALLOCATION : [_ZSt13__adjust_heapIPSt4pairIidElS1_EvT_T0_S4_T1_] /usr/include/c++/4.8.5/bits/stl_heap.h:229

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rsi rdi r8-r11 zmm0-zmm1]
        
    Routine temporaries
        Total         :      54
            Global    :      23
            Local     :      31
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       3 [1.46e+00 ~ 1.5%]
            Writes    :       2 [1.05e+00 ~ 1.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *))/usr/include/c++/4.8.5/ostream(531,5)

===========================================================================

Begin optimization report for: std::basic_ios<char, std::char_traits<char>>::setstate(std::basic_ios<char, std::char_traits<char>> *, std::ios_base::iostate)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ios<char, std::char_traits<char>>::setstate(std::basic_ios<char, std::char_traits<char>> *, std::ios_base::iostate))/usr/include/c++/4.8.5/bits/basic_ios.h(152,7)

===========================================================================

Begin optimization report for: std::char_traits<char>::length(const std::char_traits<char>::char_type *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (std::char_traits<char>::length(const std::char_traits<char>::char_type *)) [9] /usr/include/c++/4.8.5/bits/char_traits.h(259,7)
  -> EXTERN: (259,16) __builtin_strlen(const char *)


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(259,7):remark #34051: REGISTER ALLOCATION : [_ZNSt11char_traitsIcE6lengthEPKc] /usr/include/c++/4.8.5/bits/char_traits.h:259

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       7
            Local     :       5
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double))/usr/include/c++/4.8.5/ostream(221,7)

===========================================================================

Begin optimization report for: std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &)))/usr/include/c++/4.8.5/ostream(109,7)

===========================================================================

Begin optimization report for: read_mtx(char *, int *, int *, int *, int **, int **, double **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (read_mtx(char *, int *, int *, int *, int **, int **, double **)) [12] read_mtx.h(8,1)
  -> EXTERN: (23,14) fopen(const char *, const char *)
  -> (26,9) mm_read_banner(FILE *, MM_typecode *)
  -> EXTERN: (28,9) printf(const char *, ...)
  -> EXTERN: (34,9) printf(const char *, ...)
  -> INLINE: (44,16) mm_read_mtx_crd_size(FILE *, int *, int *, int *)
    -> EXTERN: mmio.h:(351,13) fgets(char *, int, FILE *)
    -> EXTERN: mmio.h:(356,9) sscanf(const char *, const char *, ...)
  -> EXTERN: (62,38) malloc(size_t)
  -> EXTERN: (63,5) memset(void *, int, size_t)
  -> EXTERN: (65,34) malloc(size_t)
  -> EXTERN: (66,34) malloc(size_t)
  -> EXTERN: (67,48) malloc(size_t)
  -> EXTERN: (86,27) fscanf(FILE *, const char *, ...)
  -> EXTERN: (89,27) fscanf(FILE *, const char *, ...)
  -> EXTERN: (94,27) fscanf(FILE *, const char *, ...)
  -> EXTERN: (109,9) fclose(FILE *)
  -> EXTERN: (133,25) malloc(size_t)
  -> EXTERN: (134,5) memcpy(void *, const void *, size_t)
  -> EXTERN: (135,5) memset(void *, int, size_t)
  -> EXTERN: (137,25) malloc(size_t)
  -> EXTERN: (138,32) malloc(size_t)
  -> EXTERN: (177,5) free(void *)
  -> EXTERN: (178,5) free(void *)
  -> EXTERN: (179,5) free(void *)
  -> EXTERN: (180,5) free(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at read_mtx.h(78,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at read_mtx.h(113,9)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 19 
   remark #15477: vector cost: 31.500 
   remark #15478: estimated potential speedup: 0.600 
   remark #15488: --- end vector cost summary ---
   remark #15499: histogram: 1 
   remark #25439: unrolled with remainder by 16  
LOOP END

LOOP BEGIN at read_mtx.h(113,9)
<Remainder>
LOOP END

LOOP BEGIN at read_mtx.h(125,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between csrRowPtrA_counter[i] (128:9) and csrRowPtrA_counter[i-1] (128:9)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at read_mtx.h(125,5)
<Remainder>
LOOP END

LOOP BEGIN at read_mtx.h(142,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between csrRowPtrA_counter[*(csrRowIdxA_tmp+i*4)] (146:62) and csrRowPtrA_counter[*(csrRowIdxA_tmp+i*4)] (161:17)
LOOP END

LOOP BEGIN at read_mtx.h(167,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between csrRowPtrA_counter[*(csrRowIdxA_tmp+i*4)] (169:58) and csrRowPtrA_counter[*(csrRowIdxA_tmp+i*4)] (172:13)
   remark #25439: unrolled with remainder by 14  
LOOP END

LOOP BEGIN at read_mtx.h(167,9)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at mmio.h(353,24) inlined into read_mtx.h(45,16)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

read_mtx.h(63,5):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
read_mtx.h(63,5):remark #34026: call to memset implemented as a call to optimized library version
read_mtx.h(134,5):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
read_mtx.h(134,5):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
read_mtx.h(134,5):remark #34026: call to memcpy implemented as a call to optimized library version
read_mtx.h(135,5):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
read_mtx.h(135,5):remark #34026: call to memset implemented as a call to optimized library version
read_mtx.h(8,1):remark #34051: REGISTER ALLOCATION : [_Z8read_mtxPcPiS0_S0_PS0_S1_PPd] read_mtx.h:8

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   17[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     361
            Global    :     100
            Local     :     261
        Regenerable   :      60
        Spilled       :      25
        
    Routine stack
        Variables     :    1061 bytes*
            Reads     :      22 [3.31e+00 ~ 3.3%]
            Writes    :      14 [2.57e+00 ~ 2.6%]
        Spills        :     152 bytes*
            Reads     :      53 [6.25e+00 ~ 6.3%]
            Writes    :      25 [3.61e+00 ~ 3.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: mm_read_banner(FILE *, MM_typecode *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (mm_read_banner(FILE *, MM_typecode *)) [13] mmio.h(256,1)
  -> EXTERN: (268,9) fgets(char *, int, FILE *)
  -> EXTERN: (271,9) sscanf(const char *, const char *, ...)
  -> EXTERN: (275,30) tolower(int)
  -> EXTERN: (276,30) tolower(int)
  -> EXTERN: (277,36) tolower(int)
  -> EXTERN: (278,41) tolower(int)
  -> EXTERN: (281,9) strncmp(const char *, const char *, size_t)
  -> EXTERN: (285,9) strcmp(const char *, const char *)
  -> EXTERN: (294,9) strcmp(const char *, const char *)
  -> EXTERN: (297,9) strcmp(const char *, const char *)
  -> EXTERN: (305,9) strcmp(const char *, const char *)
  -> EXTERN: (308,9) strcmp(const char *, const char *)
  -> EXTERN: (311,9) strcmp(const char *, const char *)
  -> EXTERN: (314,9) strcmp(const char *, const char *)
  -> EXTERN: (322,9) strcmp(const char *, const char *)
  -> EXTERN: (325,9) strcmp(const char *, const char *)
  -> EXTERN: (328,9) strcmp(const char *, const char *)
  -> EXTERN: (331,9) strcmp(const char *, const char *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mmio.h(266,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at mmio.h(275,5)
   remark #15523: loop was not vectorized: loop control variable p was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at mmio.h(276,5)
   remark #15523: loop was not vectorized: loop control variable p was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at mmio.h(277,5)
   remark #15523: loop was not vectorized: loop control variable p was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at mmio.h(278,5)
   remark #15523: loop was not vectorized: loop control variable p was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

    Report from: Code generation optimizations [cg]

mmio.h(256,1):remark #34051: REGISTER ALLOCATION : [_Z14mm_read_bannerP8_IO_FILEPA4_c] mmio.h:256

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r10 r13-r14 zmm0]
        
    Routine temporaries
        Total         :     126
            Global    :      45
            Local     :      81
        Regenerable   :      61
        Spilled       :       4
        
    Routine stack
        Variables     :    1345 bytes*
            Reads     :       4 [1.13e+00 ~ 1.1%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :      12 [3.05e+00 ~ 3.1%]
            Writes    :      12 [3.05e+00 ~ 3.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Base_MPK(int, int, int *, int *, double *, double *, double *&, int, double *, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Base_MPK(int, int, int *, int *, double *, double *, double *&, int, double *, double *, double *)) [14] Base_MPK.h(20,1)
  -> EXTERN: (26,40) operator new[](std::size_t)
  -> EXTERN: (38,17) omp_get_wtime()
  -> EXTERN: (59,15) omp_get_wtime()
  -> EXTERN: (68,5) operator delete[](void *)


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at Base_MPK.h(27,5)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED
OpenMP Construct at Base_MPK.h(34,9)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED
OpenMP Construct at Base_MPK.h(43,13)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED
OpenMP Construct at Base_MPK.h(53,13)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Base_MPK.h(32,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details

   LOOP BEGIN at Base_MPK.h(41,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END
LOOP END

LOOP BEGIN at Base_MPK.h(27,5)
   remark #25399: memcopy generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at Base_MPK.h(27,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 5 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.110 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at Base_MPK.h(27,5)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at Base_MPK.h(34,9)
   remark #25399: memcopy generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at Base_MPK.h(34,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 5 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.110 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at Base_MPK.h(34,9)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at Base_MPK.h(44,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Base_MPK.h(49,17)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at Base_MPK.h(49,17)
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 6.000 
      remark #15478: estimated potential speedup: 1.780 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at Base_MPK.h(49,17)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at Base_MPK.h(53,13)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at Base_MPK.h(53,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at Base_MPK.h(53,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

Base_MPK.h(53,13):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
Base_MPK.h(53,13):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
Base_MPK.h(53,13):remark #34026: call to memcpy implemented as a call to optimized library version
Base_MPK.h(34,9):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
Base_MPK.h(34,9):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
Base_MPK.h(34,9):remark #34026: call to memcpy implemented as a call to optimized library version
Base_MPK.h(27,5):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
Base_MPK.h(27,5):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
Base_MPK.h(27,5):remark #34026: call to memcpy implemented as a call to optimized library version
Base_MPK.h(20,1):remark #34051: REGISTER ALLOCATION : [_Z8Base_MPKiiPiS_PdS0_RS0_iS0_S0_S0_] Base_MPK.h:20

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   27[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm12]
        
    Routine temporaries
        Total         :     488
            Global    :     133
            Local     :     355
        Regenerable   :     164
        Spilled       :      10
        
    Routine stack
        Variables     :     136 bytes*
            Reads     :      17 [4.03e-04 ~ 0.0%]
            Writes    :      23 [4.44e+00 ~ 4.4%]
        Spills        :     120 bytes*
            Reads     :      35 [1.86e+00 ~ 1.9%]
            Writes    :      35 [3.06e+00 ~ 3.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: atoi(const char *)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (atoi(const char *))/usr/include/stdlib.h(279,1)

===========================================================================

Begin optimization report for: mm_strdup(const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (mm_strdup(const char *)) [16] mmio.h(138,1)
  -> EXTERN: (139,15) strlen(const char *)
  -> EXTERN: (140,25) malloc(size_t)
  -> EXTERN: (141,12) strcpy(char *, const char *)


    Report from: Code generation optimizations [cg]

mmio.h(138,1):remark #34051: REGISTER ALLOCATION : [_Z9mm_strdupPKc] mmio.h:138

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rdi r13]
        
    Routine temporaries
        Total         :      21
            Global    :      12
            Local     :       9
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: mm_typecode_to_str(char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (mm_typecode_to_str(char *)) [17] mmio.h(145,1)
  -> EXTERN: (197,5) sprintf(char *, const char *, ...)
  -> INLINE: (198,12) mm_strdup(const char *)
    -> EXTERN: (139,15) strlen(const char *)
    -> EXTERN: (140,25) malloc(size_t)
    -> EXTERN: (141,12) strcpy(char *, const char *)


    Report from: Code generation optimizations [cg]

mmio.h(145,1):remark #34051: REGISTER ALLOCATION : [_Z18mm_typecode_to_strPc] mmio.h:145

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      43
            Global    :      20
            Local     :      23
        Regenerable   :      12
        Spilled       :       0
        
    Routine stack
        Variables     :    1025 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: mm_read_mtx_crd(char *, int *, int *, int *, int **, int **, double **, MM_typecode *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (mm_read_mtx_crd(char *, int *, int *, int *, int **, int **, double **, MM_typecode *)) [18] mmio.h(204,1)
  -> EXTERN: (208,9) strcmp(const char *, const char *)
  -> EXTERN: (210,14) fopen(const char *, const char *)
  -> (214,21) mm_read_banner(FILE *, MM_typecode *)
  -> INLINE: (217,11) mm_is_valid(char *)
  -> INLINE: (221,21) mm_read_mtx_crd_size(FILE *, int *, int *, int *)
    -> EXTERN: (351,13) fgets(char *, int, FILE *)
    -> EXTERN: (356,9) sscanf(const char *, const char *, ...)
  -> EXTERN: (225,19) malloc(size_t)
  -> EXTERN: (226,19) malloc(size_t)
  -> EXTERN: (231,27) malloc(size_t)
  -> INLINE: (232,20) mm_read_mtx_crd_data(FILE *, int, int, int, int *, int *, double *, char *)
    -> EXTERN: (495,17) fscanf(FILE *, const char *, ...)
    -> EXTERN: (502,17) fscanf(FILE *, const char *, ...)
    -> EXTERN: (511,17) fscanf(FILE *, const char *, ...)
  -> EXTERN: (238,27) malloc(size_t)
  -> INLINE: (239,20) mm_read_mtx_crd_data(FILE *, int, int, int, int *, int *, double *, char *)
    -> EXTERN: (495,17) fscanf(FILE *, const char *, ...)
    -> EXTERN: (502,17) fscanf(FILE *, const char *, ...)
    -> EXTERN: (511,17) fscanf(FILE *, const char *, ...)
  -> INLINE: (246,20) mm_read_mtx_crd_data(FILE *, int, int, int, int *, int *, double *, char *)
    -> EXTERN: (495,17) fscanf(FILE *, const char *, ...)
    -> EXTERN: (502,17) fscanf(FILE *, const char *, ...)
    -> EXTERN: (511,17) fscanf(FILE *, const char *, ...)
  -> EXTERN: (251,21) fclose(FILE *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mmio.h(494,9) inlined into mmio.h(233,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ mmio.h(495,13) ]
LOOP END

LOOP BEGIN at mmio.h(500,9) inlined into mmio.h(233,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ mmio.h(502,13) ]
LOOP END

LOOP BEGIN at mmio.h(510,9) inlined into mmio.h(233,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ mmio.h(511,13) ]
LOOP END

LOOP BEGIN at mmio.h(494,9) inlined into mmio.h(240,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ mmio.h(495,13) ]
LOOP END

LOOP BEGIN at mmio.h(500,9) inlined into mmio.h(240,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ mmio.h(502,13) ]
LOOP END

LOOP BEGIN at mmio.h(510,9) inlined into mmio.h(240,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ mmio.h(511,13) ]
LOOP END

LOOP BEGIN at mmio.h(494,9) inlined into mmio.h(247,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ mmio.h(495,13) ]
LOOP END

LOOP BEGIN at mmio.h(500,9) inlined into mmio.h(247,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ mmio.h(502,13) ]
LOOP END

LOOP BEGIN at mmio.h(510,9) inlined into mmio.h(247,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ mmio.h(511,13) ]
LOOP END


Non-optimizable loops:


LOOP BEGIN at mmio.h(353,24) inlined into mmio.h(222,21)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

mmio.h(204,1):remark #34051: REGISTER ALLOCATION : [_Z15mm_read_mtx_crdPcPiS0_S0_PS0_S1_PPdPA4_c] mmio.h:204

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :     198
            Global    :      87
            Local     :     111
        Regenerable   :      41
        Spilled       :      10
        
    Routine stack
        Variables     :    1025 bytes*
            Reads     :       1 [5.45e-02 ~ 0.1%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [6.43e-04 ~ 0.0%]
            Writes    :       4 [2.76e-04 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: mm_read_mtx_crd_size(FILE *, int *, int *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (mm_read_mtx_crd_size(FILE *, int *, int *, int *)) [19] mmio.h(341,1)
  -> EXTERN: (351,13) fgets(char *, int, FILE *)
  -> EXTERN: (356,9) sscanf(const char *, const char *, ...)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mmio.h(346,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

mmio.h(341,1):remark #34051: REGISTER ALLOCATION : [_Z20mm_read_mtx_crd_sizeP8_IO_FILEPiS1_S1_] mmio.h:341

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r8 r14-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      13
            Local     :      17
        Regenerable   :      10
        Spilled       :       4
        
    Routine stack
        Variables     :    1025 bytes*
            Reads     :       1 [3.87e+00 ~ 3.9%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: mm_read_mtx_array_size(FILE *, int *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (mm_read_mtx_array_size(FILE *, int *, int *)) [20] mmio.h(370,1)
  -> EXTERN: (379,13) fgets(char *, int, FILE *)
  -> EXTERN: (384,9) sscanf(const char *, const char *, ...)
  -> EXTERN: (390,26) fscanf(FILE *, const char *, ...)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mmio.h(374,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at mmio.h(384,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

mmio.h(370,1):remark #34051: REGISTER ALLOCATION : [_Z22mm_read_mtx_array_sizeP8_IO_FILEPiS1_] mmio.h:370

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :      38
            Global    :      17
            Local     :      21
        Regenerable   :      14
        Spilled       :       3
        
    Routine stack
        Variables     :    1025 bytes*
            Reads     :       1 [3.63e+00 ~ 3.6%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: mm_write_banner(FILE *, char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (mm_write_banner(FILE *, char *)) [21] mmio.h(399,1)
  -> INLINE: (400,17) mm_typecode_to_str(char *)
    -> EXTERN: (197,5) sprintf(char *, const char *, ...)
    -> INLINE: (198,12) mm_strdup(const char *)
      -> EXTERN: (139,15) strlen(const char *)
      -> EXTERN: (140,25) malloc(size_t)
      -> EXTERN: (141,12) strcpy(char *, const char *)
  -> EXTERN: (403,16) fprintf(FILE *, const char *, ...)
  -> EXTERN: (404,5) free(void *)


    Report from: Code generation optimizations [cg]

mmio.h(399,1):remark #34051: REGISTER ALLOCATION : [_Z15mm_write_bannerP8_IO_FILEPc] mmio.h:399

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8-r10 r14-r15]
        
    Routine temporaries
        Total         :      55
            Global    :      23
            Local     :      32
        Regenerable   :      16
        Spilled       :       2
        
    Routine stack
        Variables     :    1025 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: mm_write_mtx_crd_size(FILE *, int, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (mm_write_mtx_crd_size(FILE *, int, int, int)) [22] mmio.h(412,1)
  -> EXTERN: (413,9) fprintf(FILE *, const char *, ...)


    Report from: Code generation optimizations [cg]

mmio.h(412,1):remark #34051: REGISTER ALLOCATION : [_Z21mm_write_mtx_crd_sizeP8_IO_FILEiii] mmio.h:412

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      27
            Global    :       8
            Local     :      19
        Regenerable   :       5
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: mm_write_mtx_array_size(FILE *, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (mm_write_mtx_array_size(FILE *, int, int)) [23] mmio.h(420,1)
  -> EXTERN: (421,9) fprintf(FILE *, const char *, ...)


    Report from: Code generation optimizations [cg]

mmio.h(420,1):remark #34051: REGISTER ALLOCATION : [_Z23mm_write_mtx_array_sizeP8_IO_FILEii] mmio.h:420

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      24
            Global    :       8
            Local     :      16
        Regenerable   :       5
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: mm_is_valid(char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (mm_is_valid(char *)) [24] mmio.h(431,1)


    Report from: Code generation optimizations [cg]

mmio.h(431,1):remark #34051: REGISTER ALLOCATION : [_Z11mm_is_validPc] mmio.h:431

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      15
            Global    :       9
            Local     :       6
        Regenerable   :       5
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: mm_write_mtx_crd(char *, int, int, int, int *, int *, double *, char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (mm_write_mtx_crd(char *, int, int, int, int *, int *, double *, char *)) [25] mmio.h(447,1)
  -> EXTERN: (451,9) strcmp(const char *, const char *)
  -> EXTERN: (454,14) fopen(const char *, const char *)
  -> EXTERN: (458,5) fprintf(FILE *, const char *, ...)
  -> EXTERN: (459,5) fprintf(FILE *, const char *, ...)
  -> INLINE: (459,24) mm_typecode_to_str(char *)
    -> EXTERN: (197,5) sprintf(char *, const char *, ...)
    -> INLINE: (198,12) mm_strdup(const char *)
      -> EXTERN: (139,15) strlen(const char *)
      -> EXTERN: (140,25) malloc(size_t)
      -> EXTERN: (141,12) strcpy(char *, const char *)
  -> EXTERN: (462,5) fprintf(FILE *, const char *, ...)
  -> EXTERN: (467,13) fprintf(FILE *, const char *, ...)
  -> EXTERN: (471,13) fprintf(FILE *, const char *, ...)
  -> EXTERN: (475,13) fprintf(FILE *, const char *, ...)
  -> EXTERN: (479,26) fclose(FILE *)
  -> EXTERN: (483,21) fclose(FILE *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mmio.h(466,9)
   remark #15527: loop was not vectorized: function call to fprintf(FILE *, const char *, ...) cannot be vectorized   [ mmio.h(467,13) ]
LOOP END

LOOP BEGIN at mmio.h(470,9)
   remark #15527: loop was not vectorized: function call to fprintf(FILE *, const char *, ...) cannot be vectorized   [ mmio.h(471,13) ]
LOOP END

LOOP BEGIN at mmio.h(474,9)
   remark #15527: loop was not vectorized: function call to fprintf(FILE *, const char *, ...) cannot be vectorized   [ mmio.h(475,13) ]
LOOP END

    Report from: Code generation optimizations [cg]

mmio.h(447,1):remark #34051: REGISTER ALLOCATION : [_Z16mm_write_mtx_crdPciiiPiS0_PdS_] mmio.h:447

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     123
            Global    :      41
            Local     :      82
        Regenerable   :      38
        Spilled       :       7
        
    Routine stack
        Variables     :    1025 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [5.11e-01 ~ 0.5%]
            Writes    :       1 [9.20e-02 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: mm_read_mtx_crd_data(FILE *, int, int, int, int *, int *, double *, char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (mm_read_mtx_crd_data(FILE *, int, int, int, int *, int *, double *, char *)) [26] mmio.h(490,1)
  -> EXTERN: (495,17) fscanf(FILE *, const char *, ...)
  -> EXTERN: (502,17) fscanf(FILE *, const char *, ...)
  -> EXTERN: (511,17) fscanf(FILE *, const char *, ...)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mmio.h(494,9)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ mmio.h(496,30) ]
LOOP END

LOOP BEGIN at mmio.h(500,9)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ mmio.h(503,30) ]
LOOP END

LOOP BEGIN at mmio.h(510,9)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ mmio.h(512,30) ]
LOOP END

    Report from: Code generation optimizations [cg]

mmio.h(490,1):remark #34051: REGISTER ALLOCATION : [_Z20mm_read_mtx_crd_dataP8_IO_FILEiiiPiS1_PdPc] mmio.h:490

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :      69
            Global    :      29
            Local     :      40
        Regenerable   :      15
        Spilled       :       8
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      64 bytes*
            Reads     :      38 [5.77e+00 ~ 5.8%]
            Writes    :      20 [5.19e+00 ~ 5.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: mm_read_mtx_crd_entry(FILE *, int *, int *, double *, double *, char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (mm_read_mtx_crd_entry(FILE *, int *, int *, double *, double *, char *)) [27] mmio.h(523,1)
  -> EXTERN: (526,17) fscanf(FILE *, const char *, ...)
  -> EXTERN: (531,17) fscanf(FILE *, const char *, ...)
  -> EXTERN: (538,17) fscanf(FILE *, const char *, ...)


    Report from: Code generation optimizations [cg]

mmio.h(523,1):remark #34051: REGISTER ALLOCATION : [_Z21mm_read_mtx_crd_entryP8_IO_FILEPiS1_PdS2_Pc] mmio.h:523

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      51
            Global    :      18
            Local     :      33
        Regenerable   :      14
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: mm_read_unsymmetric_sparse(const char *, int *, int *, int *, double **, int **, int **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (mm_read_unsymmetric_sparse(const char *, int *, int *, int *, double **, int **, int **)) [28] mmio.h(549,1)
  -> EXTERN: (557,14) fopen(const char *, const char *)
  -> (561,9) mm_read_banner(FILE *, MM_typecode *)
  -> EXTERN: (563,9) printf(const char *, ...)
  -> EXTERN: (564,9) printf(const char *, ...)
  -> EXTERN: (573,9) fprintf(FILE *, const char *, ...)
  -> EXTERN: (574,9) fprintf(FILE *, const char *, ...)
  -> INLINE: (575,17) mm_typecode_to_str(char *)
    -> EXTERN: (197,5) sprintf(char *, const char *, ...)
    -> INLINE: (198,12) mm_strdup(const char *)
      -> EXTERN: (139,15) strlen(const char *)
      -> EXTERN: (140,25) malloc(size_t)
      -> EXTERN: (141,12) strcpy(char *, const char *)
  -> INLINE: (581,9) mm_read_mtx_crd_size(FILE *, int *, int *, int *)
    -> EXTERN: (351,13) fgets(char *, int, FILE *)
    -> EXTERN: (356,9) sscanf(const char *, const char *, ...)
  -> EXTERN: (583,9) fprintf(FILE *, const char *, ...)
  -> EXTERN: (593,17) malloc(size_t)
  -> EXTERN: (594,17) malloc(size_t)
  -> EXTERN: (595,22) malloc(size_t)
  -> EXTERN: (607,9) fscanf(FILE *, const char *, ...)
  -> EXTERN: (611,5) fclose(FILE *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mmio.h(605,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END


Non-optimizable loops:


LOOP BEGIN at mmio.h(353,24) inlined into mmio.h(582,9)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

mmio.h(549,1):remark #34051: REGISTER ALLOCATION : [_Z26mm_read_unsymmetric_sparsePKcPiS1_S1_PPdPS1_S4_] mmio.h:549

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     130
            Global    :      43
            Local     :      87
        Regenerable   :      49
        Spilled       :       7
        
    Routine stack
        Variables     :    2066 bytes*
            Reads     :      12 [4.92e+00 ~ 4.9%]
            Writes    :       3 [1.22e-01 ~ 0.1%]
        Spills        :       8 bytes*
            Reads     :       1 [1.70e-02 ~ 0.0%]
            Writes    :       1 [1.51e+00 ~ 1.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: CheckCorrectness(int, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (CheckCorrectness(int, double *, double *)) [29] common.h(28,1)
  -> INLINE (MANUAL): (33,44) std::max<double>(const double &, const double &)
  -> (46,14) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (46,37) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (51,14) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> EXTERN: (51,50) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, int)
  -> (51,65) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (51,73) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at common.h(31,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 42 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 4.730 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at common.h(31,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 42 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 4.730 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at common.h(31,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 42 
   remark #15477: vector cost: 8.000 
   remark #15478: estimated potential speedup: 4.730 
   remark #15488: --- end vector cost summary ---
LOOP END

    Report from: Code generation optimizations [cg]

common.h(28,1):remark #34051: REGISTER ALLOCATION : [_Z16CheckCorrectnessiPdS_] common.h:28

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   46[ rax rdx rcx rbx rsi rdi r8-r9 zmm0-zmm29 k0-k7]
        
    Routine temporaries
        Total         :     179
            Global    :      34
            Local     :     145
        Regenerable   :      24
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: reorder_vector(int, double *&, double *&, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (reorder_vector(int, double *&, double *&, int *)) [30] common.h(99,78)


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at common.h(100,5)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at common.h(100,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *new_x[i] (102:9) and *x[*(ordering+i*4)] (102:9)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at common.h(100,5)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

common.h(99,78):remark #34051: REGISTER ALLOCATION : [_Z14reorder_vectoriRPdS0_Pi] common.h:99

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     124
            Global    :      24
            Local     :     100
        Regenerable   :      48
        Spilled       :       0
        
    Routine stack
        Variables     :      52 bytes*
            Reads     :       4 [0.00e+00 ~ 0.0%]
            Writes    :       9 [1.04e+01 ~ 10.4%]
        Spills        :      48 bytes*
            Reads     :      12 [4.14e+00 ~ 4.1%]
            Writes    :      12 [8.28e+00 ~ 8.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MKL_MPK(int, int, int *, int *, double *, double *, double *&, int, double *, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MKL_MPK(int, int, int *, int *, double *, double *, double *&, int, double *, double *, double *)) [31] MKL_MPK.h(21,1)
  -> EXTERN: (23,20) omp_get_wtime()
  -> EXTERN: (36,30) operator new[](std::size_t)
  -> EXTERN: (37,30) operator new[](std::size_t)
  -> EXTERN: (44,12) mkl_sparse_d_create_csr(sparse_matrix_t *, sparse_index_base_t, int, int, int *, int *, int *, double *)
  -> (46,14) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (46,33) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> EXTERN: (50,18) omp_get_wtime()
  -> EXTERN: (55,40) operator new[](std::size_t)
  -> EXTERN: (67,17) omp_get_wtime()
  -> EXTERN: (71,20) mkl_sparse_d_mv(sparse_operation_t, double, sparse_matrix_t, matrix_descr, const double *, double, double *)
  -> EXTERN: (77,15) omp_get_wtime()
  -> EXTERN: (86,5) operator delete[](void *)
  -> EXTERN: (87,5) operator delete[](void *)
  -> EXTERN: (88,5) operator delete[](void *)


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at MKL_MPK.h(56,5)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED
OpenMP Construct at MKL_MPK.h(63,9)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED
OpenMP Construct at MKL_MPK.h(73,13)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at MKL_MPK.h(38,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 9 
   remark #15477: vector cost: 1.250 
   remark #15478: estimated potential speedup: 5.540 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at MKL_MPK.h(38,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 9 
   remark #15477: vector cost: 1.250 
   remark #15478: estimated potential speedup: 5.540 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at MKL_MPK.h(38,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 9 
   remark #15477: vector cost: 1.250 
   remark #15478: estimated potential speedup: 5.540 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at MKL_MPK.h(61,5)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details

   LOOP BEGIN at MKL_MPK.h(69,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END
LOOP END

LOOP BEGIN at MKL_MPK.h(56,5)
   remark #25399: memcopy generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at MKL_MPK.h(56,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 5 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.110 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at MKL_MPK.h(56,5)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at MKL_MPK.h(63,9)
   remark #25399: memcopy generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at MKL_MPK.h(63,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 5 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.110 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at MKL_MPK.h(63,9)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at MKL_MPK.h(73,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at MKL_MPK.h(73,13)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at MKL_MPK.h(73,13)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at MKL_MPK.h(73,13)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

MKL_MPK.h(73,13):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
MKL_MPK.h(73,13):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
MKL_MPK.h(73,13):remark #34026: call to memcpy implemented as a call to optimized library version
MKL_MPK.h(63,9):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
MKL_MPK.h(63,9):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
MKL_MPK.h(63,9):remark #34026: call to memcpy implemented as a call to optimized library version
MKL_MPK.h(56,5):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
MKL_MPK.h(56,5):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
MKL_MPK.h(56,5):remark #34026: call to memcpy implemented as a call to optimized library version
MKL_MPK.h(21,1):remark #34051: REGISTER ALLOCATION : [_Z7MKL_MPKiiPiS_PdS0_RS0_iS0_S0_S0_] MKL_MPK.h:21

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm4 k1]
        
    Routine temporaries
        Total         :     439
            Global    :     120
            Local     :     319
        Regenerable   :     143
        Spilled       :      12
        
    Routine stack
        Variables     :     104 bytes*
            Reads     :      22 [4.29e+00 ~ 4.3%]
            Writes    :      18 [2.17e+00 ~ 2.2%]
        Spills        :     136 bytes*
            Reads     :      33 [4.38e-01 ~ 0.4%]
            Writes    :      32 [6.86e+00 ~ 6.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SpMV_kernel_once(char **, DCArgs *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SpMV_kernel_once(char **, DCArgs *)) [32] DC_MPK.h(12,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at DC_MPK.h(32,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at DC_MPK.h(37,9)
   <Peeled loop for vectorization>
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 7.000 
      remark #15478: estimated potential speedup: 1.520 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=7
   LOOP END

   LOOP BEGIN at DC_MPK.h(37,9)
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 7.000 
      remark #15478: estimated potential speedup: 1.520 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at DC_MPK.h(37,9)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 7.000 
      remark #15478: estimated potential speedup: 1.520 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

DC_MPK.h(12,1):remark #34051: REGISTER ALLOCATION : [_Z16SpMV_kernel_oncePPcP6DCArgs] DC_MPK.h:12

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   22[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm6 k1]
        
    Routine temporaries
        Total         :      71
            Global    :      38
            Local     :      33
        Regenerable   :       4
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      48 bytes*
            Reads     :       6 [1.47e+00 ~ 1.5%]
            Writes    :       6 [1.37e+00 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SpMV_kernel_twice(char **, DCArgs *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SpMV_kernel_twice(char **, DCArgs *)) [33] DC_MPK.h(45,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at DC_MPK.h(57,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at DC_MPK.h(62,9)
   <Peeled loop for vectorization>
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 7.000 
      remark #15478: estimated potential speedup: 1.520 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=7
   LOOP END

   LOOP BEGIN at DC_MPK.h(62,9)
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 7.000 
      remark #15478: estimated potential speedup: 1.520 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at DC_MPK.h(62,9)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 7.000 
      remark #15478: estimated potential speedup: 1.520 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at DC_MPK.h(67,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at DC_MPK.h(72,9)
   <Peeled loop for vectorization>
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 7.000 
      remark #15478: estimated potential speedup: 1.520 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=7
   LOOP END

   LOOP BEGIN at DC_MPK.h(72,9)
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 7.000 
      remark #15478: estimated potential speedup: 1.520 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at DC_MPK.h(72,9)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 7.000 
      remark #15478: estimated potential speedup: 1.520 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

DC_MPK.h(45,1):remark #34051: REGISTER ALLOCATION : [_Z17SpMV_kernel_twicePPcP6DCArgs] DC_MPK.h:45

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   22[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm6 k1]
        
    Routine temporaries
        Total         :     119
            Global    :      59
            Local     :      60
        Regenerable   :       6
        Spilled       :       8
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       4 [6.72e-01 ~ 0.7%]
            Writes    :       4 [6.72e-01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: DC::DC(DC *, int, int, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (DC::DC(DC *, int, int, int)) DC.h(60,3)

===========================================================================

Begin optimization report for: std::__iter_swap<true>::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__iter_swap<true>::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_algobase.h(101,9)

===========================================================================

Begin optimization report for: std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b<std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b<std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type)) /usr/include/c++/4.8.5/bits/stl_algobase.h(534,9)

===========================================================================

Begin optimization report for: std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf(std::basic_streambuf<char, std::char_traits<char>> *)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf(std::basic_streambuf<char, std::char_traits<char>> *))/usr/include/c++/4.8.5/streambuf(198,7)

===========================================================================

Begin optimization report for: std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf(std::basic_streambuf<char, std::char_traits<char>> *const)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_streambuf<char, std::char_traits<char>>::~basic_streambuf(std::basic_streambuf<char, std::char_traits<char>> *const))/usr/include/c++/4.8.5/streambuf(197,7)

===========================================================================

Begin optimization report for: std::ctype<char>::widen(const std::ctype<char> *, char) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::ctype<char>::widen(const std::ctype<char> *, char) const) /usr/include/c++/4.8.5/bits/locale_facets.h(866,7)

===========================================================================

Begin optimization report for: std::basic_ios<char, std::char_traits<char>>::rdstate(const std::basic_ios<char, std::char_traits<char>> *) const

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ios<char, std::char_traits<char>>::rdstate(const std::basic_ios<char, std::char_traits<char>> *) const)/usr/include/c++/4.8.5/bits/basic_ios.h(132,7)

===========================================================================

Begin optimization report for: std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *))/usr/include/c++/4.8.5/bits/basic_ios.h(276,20)

===========================================================================

Begin optimization report for: std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *const)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ios<char, std::char_traits<char>>::~basic_ios(std::basic_ios<char, std::char_traits<char>> *const))/usr/include/c++/4.8.5/bits/basic_ios.h(276,7)

===========================================================================

Begin optimization report for: std::basic_ios<char, std::char_traits<char>>::widen(const std::basic_ios<char, std::char_traits<char>> *, char) const

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ios<char, std::char_traits<char>>::widen(const std::basic_ios<char, std::char_traits<char>> *, char) const)/usr/include/c++/4.8.5/bits/basic_ios.h(444,7)

===========================================================================

Begin optimization report for: std::basic_ios<char, std::char_traits<char>>::basic_ios(std::basic_ios<char, std::char_traits<char>> *)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ios<char, std::char_traits<char>>::basic_ios(std::basic_ios<char, std::char_traits<char>> *))/usr/include/c++/4.8.5/bits/basic_ios.h(457,7)

===========================================================================

Begin optimization report for: std::basic_ios<char, std::char_traits<char>>::basic_ios(std::basic_ios<char, std::char_traits<char>> *const)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ios<char, std::char_traits<char>>::basic_ios(std::basic_ios<char, std::char_traits<char>> *const))/usr/include/c++/4.8.5/bits/basic_ios.h(454,7)

===========================================================================

Begin optimization report for: std::basic_ostream<char, std::char_traits<char>>::~basic_ostream(std::basic_ostream<char, std::char_traits<char>> *, const long *const *)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ostream<char, std::char_traits<char>>::~basic_ostream(std::basic_ostream<char, std::char_traits<char>> *, const long *const *))/usr/include/c++/4.8.5/ostream(93,24)

===========================================================================

Begin optimization report for: std::basic_ostream<char, std::char_traits<char>>::basic_ostream(std::basic_ostream<char, std::char_traits<char>> *, const long *const *)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ostream<char, std::char_traits<char>>::basic_ostream(std::basic_ostream<char, std::char_traits<char>> *, const long *const *))/usr/include/c++/4.8.5/ostream(385,7)

===========================================================================

Begin optimization report for: std::basic_filebuf<char, std::char_traits<char>>::~basic_filebuf(std::basic_filebuf<char, std::char_traits<char>> *)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_filebuf<char, std::char_traits<char>>::~basic_filebuf(std::basic_filebuf<char, std::char_traits<char>> *))/usr/include/c++/4.8.5/fstream(220,7)

===========================================================================

Begin optimization report for: std::basic_ofstream<char, std::char_traits<char>>::basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *, const long *const *)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ofstream<char, std::char_traits<char>>::basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *, const long *const *))/usr/include/c++/4.8.5/fstream(626,7)

===========================================================================

Begin optimization report for: std::basic_ofstream<char, std::char_traits<char>>::basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *const)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ofstream<char, std::char_traits<char>>::basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *const))/usr/include/c++/4.8.5/fstream(625,7)

===========================================================================

Begin optimization report for: std::basic_ofstream<char, std::char_traits<char>>::~basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *, const long *const *)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ofstream<char, std::char_traits<char>>::~basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *, const long *const *))/usr/include/c++/4.8.5/fstream(674,7)

===========================================================================

Begin optimization report for: std::basic_ofstream<char, std::char_traits<char>>::~basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *const)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ofstream<char, std::char_traits<char>>::~basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *const))/usr/include/c++/4.8.5/fstream(673,7)

===========================================================================

Begin optimization report for: std::basic_ofstream<char, std::char_traits<char>>::open(std::basic_ofstream<char, std::char_traits<char>> *, const char *, std::ios_base::openmode)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ofstream<char, std::char_traits<char>>::open(std::basic_ofstream<char, std::char_traits<char>> *, const char *, std::ios_base::openmode))/usr/include/c++/4.8.5/fstream(715,7)

===========================================================================

Begin optimization report for: std::basic_ofstream<char, std::char_traits<char>>::close(std::basic_ofstream<char, std::char_traits<char>> *)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::basic_ofstream<char, std::char_traits<char>>::close(std::basic_ofstream<char, std::char_traits<char>> *))/usr/include/c++/4.8.5/fstream(754,7)

===========================================================================

Begin optimization report for: std::pair<int, double>::pair(std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::pair<int, double>::pair(std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_pair.h(109,27)

===========================================================================

Begin optimization report for: std::_Iter_base<std::pair<int, double> *, false>::_S_base(std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::_Iter_base<std::pair<int, double> *, false>::_S_base(std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_iterator_base_types.h(213,7)

===========================================================================

Begin optimization report for: std::__lg(long)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__lg(long)) /usr/include/c++/4.8.5/bits/stl_algobase.h(989,3)

===========================================================================

Begin optimization report for: std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)) /usr/include/c++/4.8.5/bits/ios_base.h(120,3)

===========================================================================

Begin optimization report for: std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)) /usr/include/c++/4.8.5/bits/ios_base.h(158,3)

===========================================================================

Begin optimization report for: std::endl<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::endl<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &))/usr/include/c++/4.8.5/ostream(565,5)

===========================================================================

Begin optimization report for: std::flush<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &)

    Report from: Interprocedural optimizations [ipo]

NEVER EMIT DEFINITION FUNCTION: (std::flush<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &))/usr/include/c++/4.8.5/ostream(587,5)

===========================================================================

Begin optimization report for: std::max<double>(const double &, const double &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::max<double>(const double &, const double &)) /usr/include/c++/4.8.5/bits/stl_algobase.h(217,5)

===========================================================================

Begin optimization report for: std::sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_algo.h(5448,5)

===========================================================================

Begin optimization report for: std::__check_facet<std::basic_ios<char, std::char_traits<char>>::__ctype_type>(const std::basic_ios<char, std::char_traits<char>>::__ctype_type *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__check_facet<std::basic_ios<char, std::char_traits<char>>::__ctype_type>(const std::basic_ios<char, std::char_traits<char>>::__ctype_type *)) /usr/include/c++/4.8.5/bits/basic_ios.h(47,5)

===========================================================================

Begin optimization report for: std::partial_sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::partial_sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_algo.h(5297,5)

===========================================================================

Begin optimization report for: std::__heap_select<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__heap_select<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_algo.h(1932,5)

===========================================================================

Begin optimization report for: std::make_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::make_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_heap.h(387,5)

===========================================================================

Begin optimization report for: std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::operator<<int, double>(const std::pair<int, double> &, const std::pair<int, double> &)) /usr/include/c++/4.8.5/bits/stl_pair.h(221,5)

===========================================================================

Begin optimization report for: std::__push_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__push_heap<std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type>(std::pair<int, double> *, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::difference_type, std::iterator_traits<std::pair<int, double> *>::value_type)) /usr/include/c++/4.8.5/bits/stl_heap.h(133,5)

===========================================================================

Begin optimization report for: std::__pop_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__pop_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_heap.h(255,5)

===========================================================================

Begin optimization report for: std::sort_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::sort_heap<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_heap.h(466,5)

===========================================================================

Begin optimization report for: std::__unguarded_partition_pivot<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__unguarded_partition_pivot<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_algo.h(2280,5)

===========================================================================

Begin optimization report for: std::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::iter_swap<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_algobase.h(120,5)

===========================================================================

Begin optimization report for: std::swap<std::pair<int, double>>(std::pair<int, double> &, std::pair<int, double> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::swap<std::pair<int, double>>(std::pair<int, double> &, std::pair<int, double> &)) /usr/include/c++/4.8.5/bits/move.h(171,5)

===========================================================================

Begin optimization report for: std::__unguarded_partition<std::pair<int, double> *, std::pair<int, double>>(std::pair<int, double> *, std::pair<int, double> *, const std::pair<int, double> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__unguarded_partition<std::pair<int, double> *, std::pair<int, double>>(std::pair<int, double> *, std::pair<int, double> *, const std::pair<int, double> &)) /usr/include/c++/4.8.5/bits/stl_algo.h(2239,5)

===========================================================================

Begin optimization report for: std::__final_insertion_sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__final_insertion_sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_algo.h(2208,5)

===========================================================================

Begin optimization report for: std::__insertion_sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__insertion_sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_algo.h(2131,5)

===========================================================================

Begin optimization report for: std::copy_backward<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::copy_backward<std::pair<int, double> *, std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *, std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_algobase.h(620,5)

===========================================================================

Begin optimization report for: std::__miter_base<std::pair<int, double> *>(std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__miter_base<std::pair<int, double> *>(std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_algobase.h(289,5)

===========================================================================

Begin optimization report for: std::__copy_move_backward_a2<false, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::pair<int, double> *>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__copy_move_backward_a2<false, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::pair<int, double> *>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_algobase.h(593,5)

===========================================================================

Begin optimization report for: std::__niter_base<std::_Iter_base<std::pair<int, double> *, false>::iterator_type>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__niter_base<std::_Iter_base<std::pair<int, double> *, false>::iterator_type>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type)) /usr/include/c++/4.8.5/bits/stl_algobase.h(278,5)

===========================================================================

Begin optimization report for: std::__copy_move_backward_a<false, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__copy_move_backward_a<false, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type>(std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type, std::_Iter_base<std::pair<int, double> *, false>::iterator_type)) /usr/include/c++/4.8.5/bits/stl_algobase.h(575,5)

===========================================================================

Begin optimization report for: std::__unguarded_linear_insert<std::pair<int, double> *>(std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__unguarded_linear_insert<std::pair<int, double> *>(std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_algo.h(2093,5)

===========================================================================

Begin optimization report for: std::__unguarded_insertion_sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__unguarded_insertion_sort<std::pair<int, double> *>(std::pair<int, double> *, std::pair<int, double> *)) /usr/include/c++/4.8.5/bits/stl_algo.h(2176,5)

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [85] <compiler generated>
  -> EXTERN: /usr/include/c++/4.8.5/iostream:(74,25) __cxa_atexit(void (*)(void *), void *, void *)
  -> EXTERN: /usr/include/c++/4.8.5/iostream:(74,25) std::ios_base::Init::Init(std::ios_base::Init *)


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [__sti__$E] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       7
            Local     :       6
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
